### It's for reading from small files
import re
import matplotlib.pyplot as plt
import numpy as np
from scipy import stats
import sys
import pandas as pd
import matplotlib.patches as patches
from matplotlib.patches import Rectangle
sample_count = 64 * 1 #0 #0 #800


bytes = 0 # int(sys.argv[1])

df = pd.read_csv('data1.csv', sep=' ')
data_lines = df['ciphertext'].tolist()
data = df['time'].tolist()
timing_result = np.array(data)

### Filter outliers. 25 and 70 are empricially chosen here. They should be enumerated to find the best value. 
### Since we only test if the attack works here or not, we just use a simple method to filter outliers.
q1 = np.percentile(timing_result, 25)
q3 = np.percentile(timing_result, 70)
iqr = q3 - q1
threshold = 1.5 * iqr
outliers = np.where((timing_result < q1 - threshold) | (timing_result > q3 + threshold))
print("outliers:", outliers)
median_value = np.median(timing_result)
for index in outliers:
    timing_result[index] = median_value


string0 = data_lines[0]
string63 = data_lines[63]
init_byte = int(string0[bytes*2:bytes*2+2],16)
end_byte=int(string63[bytes*2:bytes*2+2],16)

## We have already collected data, now we need to generate simulate data
sbox= [
    0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38,
    0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,
    0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,
    0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,
    0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d,
    0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,
    0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2,
    0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,
    0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,
    0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,
    0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda,
    0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,
    0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a,
    0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,
    0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,
    0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,
    0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea,
    0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,
    0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85,
    0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,
    0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,
    0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
    0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20,
    0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,
    0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31,
    0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
    0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,
    0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,
    0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0,
    0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,
    0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26,
    0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d
  ]

### Make a table
def xtime(x):
  return ((x<<1) ^ (((x>>7) & 1) * 0x1b))

def multiply(x,y):
   return (((y & 1) * x) ^ ((y>>1 & 1) * xtime(x)) ^ ((y>>2 & 1) * xtime(xtime(x))) ^ ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^ ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))))



big_table = [[[1, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3, 1, 3, 0, 2, 3, 0, 1, 1, 3, 2, 2, 1, 0, 0, 2, 2, 3, 1, 1, 2, 1, 3, 2, 0, 2, 3, 3, 1, 1, 3, 2, 1, 2, 2, 3, 3, 1, 2, 2, 1, 2, 1, 3, 1, 2, 0, 2, 3, 0, 0, 0, 3, 2, 2, 3, 1, 1, 0, 3, 3, 0, 2, 0, 2, 0, 1, 1, 2, 0, 2, 3, 1, 2, 1, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 1, 2, 0, 0, 2, 2, 0, 2, 1, 1, 0, 3, 3, 0, 0, 0, 3, 0, 0, 1, 2, 3, 2, 3, 1, 1, 1, 2, 3, 2, 2, 3, 1, 0, 2, 2, 3, 2, 3, 0, 3, 0, 1, 0, 2, 0, 1, 2, 2, 1, 0, 2, 3, 2, 2, 2, 2, 3, 0, 0, 1, 1, 1, 3, 2, 0, 2, 2, 1, 1, 3, 3, 0, 3, 3, 3, 1, 3, 2, 3, 2, 0, 3, 2, 1, 3, 0, 0, 0, 3, 0, 1, 3, 3, 0, 3, 1, 1, 0, 1, 1, 3, 3, 2, 1, 3, 1, 2, 0, 3, 3, 2, 2, 3, 1, 2, 0, 1, 3, 3, 2, 3, 1, 2, 1, 0, 1, 1, 1, 3, 1, 3, 2, 0, 3, 0, 2, 0, 3, 0, 0, 3, 1, 1, 3, 1, 3], [3, 1, 0, 0, 2, 2, 3, 3, 0, 1, 3, 0, 3, 0, 0, 1, 2, 2, 3, 3, 0, 1, 1, 3, 2, 2, 1, 1, 2, 1, 3, 3, 3, 2, 1, 2, 3, 2, 0, 3, 3, 0, 1, 1, 1, 1, 2, 0, 1, 1, 3, 1, 1, 1, 0, 1, 3, 2, 3, 0, 0, 2, 0, 0, 3, 1, 0, 1, 3, 0, 0, 2, 0, 3, 2, 3, 2, 1, 1, 1, 0, 3, 0, 3, 1, 3, 0, 1, 2, 2, 1, 3, 3, 2, 0, 3, 1, 1, 2, 0, 2, 0, 0, 1, 0, 2, 2, 0, 0, 1, 1, 0, 0, 1, 3, 2, 3, 3, 1, 0, 2, 2, 0, 0, 0, 2, 2, 0, 3, 1, 2, 1, 0, 1, 1, 3, 1, 0, 3, 3, 0, 1, 2, 3, 1, 2, 3, 0, 2, 2, 2, 3, 2, 1, 2, 3, 3, 3, 1, 0, 1, 0, 3, 3, 3, 1, 2, 2, 0, 1, 1, 1, 2, 3, 0, 3, 1, 3, 3, 0, 2, 0, 2, 0, 0, 1, 2, 1, 2, 3, 2, 0, 3, 1, 2, 2, 2, 0, 2, 2, 1, 2, 2, 2, 0, 3, 3, 2, 1, 3, 2, 2, 3, 1, 0, 1, 1, 2, 2, 0, 1, 3, 0, 3, 3, 2, 3, 0, 2, 1, 0, 1, 3, 3, 0, 3, 3, 3, 0, 1, 2, 1, 0, 2, 0, 3, 0, 0, 2, 0, 2, 1, 3, 0, 1, 2], [1, 1, 3, 2, 3, 3, 2, 2, 1, 3, 2, 0, 3, 3, 2, 2, 1, 1, 2, 3, 0, 0, 2, 3, 3, 2, 3, 3, 0, 3, 0, 1, 1, 1, 1, 3, 2, 0, 1, 2, 0, 2, 1, 1, 3, 2, 0, 2, 1, 0, 2, 2, 0, 3, 1, 0, 0, 0, 2, 2, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 0, 2, 2, 2, 0, 1, 0, 2, 0, 1, 3, 0, 2, 1, 2, 0, 1, 3, 0, 2, 3, 1, 2, 2, 0, 3, 1, 3, 3, 0, 2, 1, 2, 1, 3, 1, 0, 0, 1, 0, 3, 0, 2, 0, 3, 2, 1, 2, 1, 0, 0, 3, 1, 0, 0, 2, 2, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 1, 1, 3, 0, 1, 0, 1, 3, 0, 1, 1, 3, 3, 3, 1, 2, 3, 0, 3, 0, 3, 3, 3, 3, 3, 0, 3, 0, 0, 2, 3, 0, 2, 1, 3, 3, 1, 3, 2, 1, 2, 2, 0, 2, 1, 1, 0, 3, 0, 2, 1, 1, 0, 3, 3, 3, 3, 3, 2, 0, 0, 3, 0, 2, 2, 0, 1, 3, 0, 0, 2, 1, 1, 3, 3, 0, 2, 1, 0, 1, 1, 0, 1, 1, 0, 0, 2, 1, 2, 2, 3, 0, 3, 0, 1, 0, 1, 2, 3, 1, 0, 2, 2, 0, 0, 1, 1, 0, 2, 1, 1, 3, 2, 2, 1, 1, 1, 1], [2, 1, 2, 1, 1, 1, 1, 0, 3, 1, 1, 1, 3, 3, 1, 2, 1, 0, 0, 3, 1, 3, 2, 3, 1, 2, 1, 1, 2, 0, 1, 3, 2, 1, 0, 1, 1, 2, 2, 0, 1, 0, 0, 1, 1, 2, 2, 0, 1, 3, 1, 3, 3, 0, 2, 2, 0, 3, 1, 0, 2, 2, 1, 2, 0, 2, 3, 3, 3, 2, 1, 3, 1, 1, 3, 3, 3, 3, 2, 0, 2, 0, 0, 2, 2, 1, 3, 0, 3, 3, 1, 2, 1, 2, 1, 3, 0, 0, 0, 0, 2, 3, 1, 1, 3, 0, 3, 0, 3, 2, 1, 0, 1, 3, 2, 2, 3, 0, 1, 0, 2, 0, 3, 0, 0, 3, 2, 2, 0, 0, 3, 1, 0, 3, 0, 1, 0, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 2, 0, 0, 1, 3, 0, 2, 1, 1, 2, 0, 0, 2, 1, 3, 2, 0, 2, 3, 2, 2, 2, 2, 3, 1, 0, 2, 3, 2, 2, 2, 0, 0, 2, 1, 1, 2, 1, 0, 2, 2, 1, 3, 3, 3, 2, 0, 0, 1, 2, 0, 2, 1, 2, 3, 3, 3, 2, 3, 1, 3, 3, 2, 1, 0, 2, 2, 0, 1, 3, 0, 1, 1, 0, 3, 1, 1, 1, 0, 0, 0, 0, 3, 3, 2, 3, 1, 3, 0, 3, 2, 1, 3, 3, 3, 0, 1, 3, 0, 1, 2, 0, 2, 3, 3, 2, 2, 1, 1]], [[0, 0, 1, 1, 1, 1, 3, 0, 1, 3, 3, 2, 0, 2, 1, 3, 2, 1, 0, 0, 2, 3, 3, 0, 1, 1, 3, 3, 2, 0, 0, 3, 0, 2, 3, 1, 3, 2, 2, 0, 0, 2, 3, 0, 3, 3, 2, 2, 0, 3, 3, 0, 3, 0, 2, 0, 3, 1, 3, 2, 1, 1, 1, 2, 3, 3, 2, 0, 0, 1, 2, 2, 1, 3, 1, 3, 1, 0, 0, 3, 1, 3, 2, 0, 3, 0, 1, 0, 1, 2, 3, 0, 3, 1, 2, 0, 3, 0, 2, 1, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0, 3, 1, 1, 3, 3, 1, 3, 0, 0, 1, 2, 2, 1, 1, 1, 2, 1, 1, 0, 3, 2, 3, 2, 0, 0, 0, 3, 2, 3, 3, 2, 0, 1, 3, 3, 2, 3, 2, 1, 2, 1, 0, 1, 3, 1, 0, 3, 3, 0, 1, 3, 2, 3, 3, 3, 3, 2, 1, 1, 0, 0, 0, 2, 3, 1, 3, 3, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 3, 2, 3, 1, 2, 3, 0, 2, 1, 1, 1, 2, 1, 0, 2, 2, 1, 2, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 0, 3, 1, 2, 2, 3, 3, 2, 0, 3, 1, 0, 2, 2, 3, 2, 0, 3, 0, 1, 0, 0, 0, 2, 0, 2, 3, 1, 2, 1, 3, 1, 2, 1, 1, 2, 0, 0, 2, 0, 2], [2, 0, 1, 1, 3, 3, 2, 2, 1, 0, 2, 1, 2, 1, 1, 0, 3, 3, 2, 2, 1, 0, 0, 2, 3, 3, 0, 0, 3, 0, 2, 2, 2, 3, 0, 3, 2, 3, 1, 2, 2, 1, 0, 0, 0, 0, 3, 1, 0, 0, 2, 0, 0, 0, 1, 0, 2, 3, 2, 1, 1, 3, 1, 1, 2, 0, 1, 0, 2, 1, 1, 3, 1, 2, 3, 2, 3, 0, 0, 0, 1, 2, 1, 2, 0, 2, 1, 0, 3, 3, 0, 2, 2, 3, 1, 2, 0, 0, 3, 1, 3, 1, 1, 0, 1, 3, 3, 1, 1, 0, 0, 1, 1, 0, 2, 3, 2, 2, 0, 1, 3, 3, 1, 1, 1, 3, 3, 1, 2, 0, 3, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 3, 3, 2, 3, 0, 3, 2, 2, 2, 0, 1, 0, 1, 2, 2, 2, 0, 3, 3, 1, 0, 0, 0, 3, 2, 1, 2, 0, 2, 2, 1, 3, 1, 3, 1, 1, 0, 3, 0, 3, 2, 3, 1, 2, 0, 3, 3, 3, 1, 3, 3, 0, 3, 3, 3, 1, 2, 2, 3, 0, 2, 3, 3, 2, 0, 1, 0, 0, 3, 3, 1, 0, 2, 1, 2, 2, 3, 2, 1, 3, 0, 1, 0, 2, 2, 1, 2, 2, 2, 1, 0, 3, 0, 1, 3, 1, 2, 1, 1, 3, 1, 3, 0, 2, 1, 0, 3], [0, 0, 2, 3, 2, 2, 3, 3, 0, 2, 3, 1, 2, 2, 3, 3, 0, 0, 3, 2, 1, 1, 3, 2, 2, 3, 2, 2, 1, 2, 1, 0, 0, 0, 0, 2, 3, 1, 0, 3, 1, 3, 0, 0, 2, 3, 1, 3, 0, 1, 3, 3, 1, 2, 0, 1, 1, 1, 3, 3, 2, 3, 3, 0, 1, 3, 2, 3, 2, 2, 1, 3, 3, 3, 1, 0, 1, 3, 1, 0, 2, 1, 3, 0, 3, 1, 0, 2, 1, 3, 2, 0, 3, 3, 1, 2, 0, 2, 2, 1, 3, 0, 3, 0, 2, 0, 1, 1, 0, 1, 2, 1, 3, 1, 2, 3, 0, 3, 0, 1, 1, 2, 0, 1, 1, 3, 3, 2, 3, 0, 3, 2, 3, 3, 2, 1, 0, 2, 0, 0, 2, 1, 0, 1, 0, 2, 1, 0, 0, 2, 2, 2, 0, 3, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 3, 2, 1, 3, 0, 2, 2, 0, 2, 3, 0, 3, 3, 1, 3, 0, 0, 1, 2, 1, 3, 0, 0, 1, 2, 2, 2, 2, 2, 3, 1, 1, 2, 1, 3, 3, 1, 0, 2, 1, 1, 3, 0, 0, 2, 2, 1, 3, 0, 1, 0, 0, 1, 0, 0, 1, 1, 3, 0, 3, 3, 2, 1, 2, 1, 0, 1, 0, 3, 2, 0, 1, 3, 3, 1, 1, 0, 0, 1, 3, 0, 0, 2, 3, 3, 0, 0, 0, 0], [3, 0, 3, 0, 0, 0, 0, 1, 2, 0, 0, 0, 2, 2, 0, 3, 0, 1, 1, 2, 0, 2, 3, 2, 0, 3, 0, 0, 3, 1, 0, 2, 3, 0, 1, 0, 0, 3, 3, 1, 0, 1, 1, 0, 0, 3, 3, 1, 0, 2, 0, 2, 2, 1, 3, 3, 1, 2, 0, 1, 3, 3, 0, 3, 1, 3, 2, 2, 2, 3, 0, 2, 0, 0, 2, 2, 2, 2, 3, 1, 3, 1, 1, 3, 3, 0, 2, 1, 2, 2, 0, 3, 0, 3, 0, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 1, 2, 1, 2, 3, 0, 1, 0, 2, 3, 3, 2, 1, 0, 1, 3, 1, 2, 1, 1, 2, 3, 3, 1, 1, 2, 0, 1, 2, 1, 0, 1, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 3, 1, 1, 0, 2, 1, 3, 0, 0, 3, 1, 1, 3, 0, 2, 3, 1, 3, 2, 3, 3, 3, 3, 2, 0, 1, 3, 2, 3, 3, 3, 1, 1, 3, 0, 0, 3, 0, 1, 3, 3, 0, 2, 2, 2, 3, 1, 1, 0, 3, 1, 3, 0, 3, 2, 2, 2, 3, 2, 0, 2, 2, 3, 0, 1, 3, 3, 1, 0, 2, 1, 0, 0, 1, 2, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 2, 0, 2, 1, 2, 3, 0, 2, 2, 2, 1, 0, 2, 1, 0, 3, 1, 3, 2, 2, 3, 3, 0, 0]], [[3, 3, 2, 2, 2, 2, 0, 3, 2, 0, 0, 1, 3, 1, 2, 0, 1, 2, 3, 3, 1, 0, 0, 3, 2, 2, 0, 0, 1, 3, 3, 0, 3, 1, 0, 2, 0, 1, 1, 3, 3, 1, 0, 3, 0, 0, 1, 1, 3, 0, 0, 3, 0, 3, 1, 3, 0, 2, 0, 1, 2, 2, 2, 1, 0, 0, 1, 3, 3, 2, 1, 1, 2, 0, 2, 0, 2, 3, 3, 0, 2, 0, 1, 3, 0, 3, 2, 3, 2, 1, 0, 3, 0, 2, 1, 3, 0, 3, 1, 2, 2, 2, 2, 3, 1, 2, 2, 2, 2, 3, 0, 2, 2, 0, 0, 2, 0, 3, 3, 2, 1, 1, 2, 2, 2, 1, 2, 2, 3, 0, 1, 0, 1, 3, 3, 3, 0, 1, 0, 0, 1, 3, 2, 0, 0, 1, 0, 1, 2, 1, 2, 3, 2, 0, 2, 3, 0, 0, 3, 2, 0, 1, 0, 0, 0, 0, 1, 2, 2, 3, 3, 3, 1, 0, 2, 0, 0, 3, 3, 1, 1, 2, 1, 1, 1, 3, 1, 0, 1, 0, 2, 1, 0, 3, 1, 2, 2, 2, 1, 2, 3, 1, 1, 2, 1, 3, 3, 2, 3, 3, 1, 1, 0, 3, 1, 3, 0, 2, 1, 1, 0, 0, 1, 3, 0, 2, 3, 1, 1, 0, 1, 3, 0, 3, 2, 3, 3, 3, 1, 3, 1, 0, 2, 1, 2, 0, 2, 1, 2, 2, 1, 3, 3, 1, 3, 1], [1, 3, 2, 2, 0, 0, 1, 1, 2, 3, 1, 2, 1, 2, 2, 3, 0, 0, 1, 1, 2, 3, 3, 1, 0, 0, 3, 3, 0, 3, 1, 1, 1, 0, 3, 0, 1, 0, 2, 1, 1, 2, 3, 3, 3, 3, 0, 2, 3, 3, 1, 3, 3, 3, 2, 3, 1, 0, 1, 2, 2, 0, 2, 2, 1, 3, 2, 3, 1, 2, 2, 0, 2, 1, 0, 1, 0, 3, 3, 3, 2, 1, 2, 1, 3, 1, 2, 3, 0, 0, 3, 1, 1, 0, 2, 1, 3, 3, 0, 2, 0, 2, 2, 3, 2, 0, 0, 2, 2, 3, 3, 2, 2, 3, 1, 0, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 2, 1, 3, 0, 3, 2, 3, 3, 1, 3, 2, 1, 1, 2, 3, 0, 1, 3, 0, 1, 2, 0, 0, 0, 1, 0, 3, 0, 1, 1, 1, 3, 2, 3, 2, 1, 1, 1, 3, 0, 0, 2, 3, 3, 3, 0, 1, 2, 1, 3, 1, 1, 2, 0, 2, 0, 2, 2, 3, 0, 3, 0, 1, 0, 2, 1, 3, 0, 0, 0, 2, 0, 0, 3, 0, 0, 0, 2, 1, 1, 0, 3, 1, 0, 0, 1, 3, 2, 3, 3, 0, 0, 2, 3, 1, 2, 1, 1, 0, 1, 2, 0, 3, 2, 3, 1, 1, 2, 1, 1, 1, 2, 3, 0, 3, 2, 0, 2, 1, 2, 2, 0, 2, 0, 3, 1, 2, 3, 0], [3, 3, 1, 0, 1, 1, 0, 0, 3, 1, 0, 2, 1, 1, 0, 0, 3, 3, 0, 1, 2, 2, 0, 1, 1, 0, 1, 1, 2, 1, 2, 3, 3, 3, 3, 1, 0, 2, 3, 0, 2, 0, 3, 3, 1, 0, 2, 0, 3, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 1, 0, 0, 3, 2, 0, 1, 0, 1, 1, 2, 0, 0, 0, 2, 3, 2, 0, 2, 3, 1, 2, 0, 3, 0, 2, 3, 1, 2, 0, 1, 3, 0, 0, 2, 1, 3, 1, 1, 2, 0, 3, 0, 3, 1, 3, 2, 2, 3, 2, 1, 2, 0, 2, 1, 0, 3, 0, 3, 2, 2, 1, 3, 2, 2, 0, 0, 1, 0, 3, 0, 1, 0, 0, 1, 2, 3, 1, 3, 3, 1, 2, 3, 2, 3, 1, 2, 3, 3, 1, 1, 1, 3, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 0, 1, 2, 0, 3, 1, 1, 3, 1, 0, 3, 0, 0, 2, 0, 3, 3, 2, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 1, 0, 2, 2, 1, 2, 0, 0, 2, 3, 1, 2, 2, 0, 3, 3, 1, 1, 2, 0, 3, 2, 3, 3, 2, 3, 3, 2, 2, 0, 3, 0, 0, 1, 2, 1, 2, 3, 2, 3, 0, 1, 3, 2, 0, 0, 2, 2, 3, 3, 2, 0, 3, 3, 1, 0, 0, 3, 3, 3, 3], [0, 3, 0, 3, 3, 3, 3, 2, 1, 3, 3, 3, 1, 1, 3, 0, 3, 2, 2, 1, 3, 1, 0, 1, 3, 0, 3, 3, 0, 2, 3, 1, 0, 3, 2, 3, 3, 0, 0, 2, 3, 2, 2, 3, 3, 0, 0, 2, 3, 1, 3, 1, 1, 2, 0, 0, 2, 1, 3, 2, 0, 0, 3, 0, 2, 0, 1, 1, 1, 0, 3, 1, 3, 3, 1, 1, 1, 1, 0, 2, 0, 2, 2, 0, 0, 3, 1, 2, 1, 1, 3, 0, 3, 0, 3, 1, 2, 2, 2, 2, 0, 1, 3, 3, 1, 2, 1, 2, 1, 0, 3, 2, 3, 1, 0, 0, 1, 2, 3, 2, 0, 2, 1, 2, 2, 1, 0, 0, 2, 2, 1, 3, 2, 1, 2, 3, 2, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 0, 2, 2, 3, 1, 2, 0, 3, 3, 0, 2, 2, 0, 3, 1, 0, 2, 0, 1, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 2, 2, 0, 3, 3, 0, 3, 2, 0, 0, 3, 1, 1, 1, 0, 2, 2, 3, 0, 2, 0, 3, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 3, 2, 0, 0, 2, 3, 1, 2, 3, 3, 2, 1, 3, 3, 3, 2, 2, 2, 2, 1, 1, 0, 1, 3, 1, 2, 1, 0, 3, 1, 1, 1, 2, 3, 1, 2, 3, 0, 2, 0, 1, 1, 0, 0, 3, 3]], [[2, 2, 3, 3, 3, 3, 1, 2, 3, 1, 1, 0, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 1, 2, 3, 3, 1, 1, 0, 2, 2, 1, 2, 0, 1, 3, 1, 0, 0, 2, 2, 0, 1, 2, 1, 1, 0, 0, 2, 1, 1, 2, 1, 2, 0, 2, 1, 3, 1, 0, 3, 3, 3, 0, 1, 1, 0, 2, 2, 3, 0, 0, 3, 1, 3, 1, 3, 2, 2, 1, 3, 1, 0, 2, 1, 2, 3, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 2, 0, 3, 3, 3, 3, 2, 0, 3, 3, 3, 3, 2, 1, 3, 3, 1, 1, 3, 1, 2, 2, 3, 0, 0, 3, 3, 3, 0, 3, 3, 2, 1, 0, 1, 0, 2, 2, 2, 1, 0, 1, 1, 0, 2, 3, 1, 1, 0, 1, 0, 3, 0, 3, 2, 3, 1, 3, 2, 1, 1, 2, 3, 1, 0, 1, 1, 1, 1, 0, 3, 3, 2, 2, 2, 0, 1, 3, 1, 1, 2, 2, 0, 0, 3, 0, 0, 0, 2, 0, 1, 0, 1, 3, 0, 1, 2, 0, 3, 3, 3, 0, 3, 2, 0, 0, 3, 0, 2, 2, 3, 2, 2, 0, 0, 1, 2, 0, 2, 1, 3, 0, 0, 1, 1, 0, 2, 1, 3, 2, 0, 0, 1, 0, 2, 1, 2, 3, 2, 2, 2, 0, 2, 0, 1, 3, 0, 3, 1, 3, 0, 3, 3, 0, 2, 2, 0, 2, 0], [0, 2, 3, 3, 1, 1, 0, 0, 3, 2, 0, 3, 0, 3, 3, 2, 1, 1, 0, 0, 3, 2, 2, 0, 1, 1, 2, 2, 1, 2, 0, 0, 0, 1, 2, 1, 0, 1, 3, 0, 0, 3, 2, 2, 2, 2, 1, 3, 2, 2, 0, 2, 2, 2, 3, 2, 0, 1, 0, 3, 3, 1, 3, 3, 0, 2, 3, 2, 0, 3, 3, 1, 3, 0, 1, 0, 1, 2, 2, 2, 3, 0, 3, 0, 2, 0, 3, 2, 1, 1, 2, 0, 0, 1, 3, 0, 2, 2, 1, 3, 1, 3, 3, 2, 3, 1, 1, 3, 3, 2, 2, 3, 3, 2, 0, 1, 0, 0, 2, 3, 1, 1, 3, 3, 3, 1, 1, 3, 0, 2, 1, 2, 3, 2, 2, 0, 2, 3, 0, 0, 3, 2, 1, 0, 2, 1, 0, 3, 1, 1, 1, 0, 1, 2, 1, 0, 0, 0, 2, 3, 2, 3, 0, 0, 0, 2, 1, 1, 3, 2, 2, 2, 1, 0, 3, 0, 2, 0, 0, 3, 1, 3, 1, 3, 3, 2, 1, 2, 1, 0, 1, 3, 0, 2, 1, 1, 1, 3, 1, 1, 2, 1, 1, 1, 3, 0, 0, 1, 2, 0, 1, 1, 0, 2, 3, 2, 2, 1, 1, 3, 2, 0, 3, 0, 0, 1, 0, 3, 1, 2, 3, 2, 0, 0, 3, 0, 0, 0, 3, 2, 1, 2, 3, 1, 3, 0, 3, 3, 1, 3, 1, 2, 0, 3, 2, 1], [2, 2, 0, 1, 0, 0, 1, 1, 2, 0, 1, 3, 0, 0, 1, 1, 2, 2, 1, 0, 3, 3, 1, 0, 0, 1, 0, 0, 3, 0, 3, 2, 2, 2, 2, 0, 1, 3, 2, 1, 3, 1, 2, 2, 0, 1, 3, 1, 2, 3, 1, 1, 3, 0, 2, 3, 3, 3, 1, 1, 0, 1, 1, 2, 3, 1, 0, 1, 0, 0, 3, 1, 1, 1, 3, 2, 3, 1, 3, 2, 0, 3, 1, 2, 1, 3, 2, 0, 3, 1, 0, 2, 1, 1, 3, 0, 2, 0, 0, 3, 1, 2, 1, 2, 0, 2, 3, 3, 2, 3, 0, 3, 1, 3, 0, 1, 2, 1, 2, 3, 3, 0, 2, 3, 3, 1, 1, 0, 1, 2, 1, 0, 1, 1, 0, 3, 2, 0, 2, 2, 0, 3, 2, 3, 2, 0, 3, 2, 2, 0, 0, 0, 2, 1, 0, 3, 0, 3, 0, 0, 0, 0, 0, 3, 0, 3, 3, 1, 0, 3, 1, 2, 0, 0, 2, 0, 1, 2, 1, 1, 3, 1, 2, 2, 3, 0, 3, 1, 2, 2, 3, 0, 0, 0, 0, 0, 1, 3, 3, 0, 3, 1, 1, 3, 2, 0, 3, 3, 1, 2, 2, 0, 0, 3, 1, 2, 3, 2, 2, 3, 2, 2, 3, 3, 1, 2, 1, 1, 0, 3, 0, 3, 2, 3, 2, 1, 0, 2, 3, 1, 1, 3, 3, 2, 2, 3, 1, 2, 2, 0, 1, 1, 2, 2, 2, 2], [1, 2, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 0, 0, 2, 1, 2, 3, 3, 0, 2, 0, 1, 0, 2, 1, 2, 2, 1, 3, 2, 0, 1, 2, 3, 2, 2, 1, 1, 3, 2, 3, 3, 2, 2, 1, 1, 3, 2, 0, 2, 0, 0, 3, 1, 1, 3, 0, 2, 3, 1, 1, 2, 1, 3, 1, 0, 0, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 1, 3, 1, 3, 3, 1, 1, 2, 0, 3, 0, 0, 2, 1, 2, 1, 2, 0, 3, 3, 3, 3, 1, 0, 2, 2, 0, 3, 0, 3, 0, 1, 2, 3, 2, 0, 1, 1, 0, 3, 2, 3, 1, 3, 0, 3, 3, 0, 1, 1, 3, 3, 0, 2, 3, 0, 3, 2, 3, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 1, 2, 2, 1, 3, 3, 1, 2, 0, 1, 3, 1, 0, 1, 1, 1, 1, 0, 2, 3, 1, 0, 1, 1, 1, 3, 3, 1, 2, 2, 1, 2, 3, 1, 1, 2, 0, 0, 0, 1, 3, 3, 2, 1, 3, 1, 2, 1, 0, 0, 0, 1, 0, 2, 0, 0, 1, 2, 3, 1, 1, 3, 2, 0, 3, 2, 2, 3, 0, 2, 2, 2, 3, 3, 3, 3, 0, 0, 1, 0, 2, 0, 3, 0, 1, 2, 0, 0, 0, 3, 2, 0, 3, 2, 1, 3, 1, 0, 0, 1, 1, 2, 2]]]

### Compute pearson correlation with guessed keys.
result = [0] * 16384
count_final = 0
best_match = [0] * 3
flag = 0
for k0 in range(0,256):
    if (k0 & 0xC0) != (init_byte ^ 0x40) & 0xC0:
        continue
    for k1 in range(0,256):
        tmp_result = [0] * 64
        tmp_count = 0
        for pt in range(init_byte,end_byte+1):

            st0 = k0 ^ pt
            a0 = big_table[(k1 >> 6) & 0x3][0][st0]
            a1 = big_table[(k1 >> 4) & 0x3][1][st0]
            a2 = big_table[(k1 >> 2) & 0x3][2][st0]
            a3 = big_table[(k1 >> 0) & 0x3][3][st0]
            
            a = (a0 == 0) or (a1 == 0) or (a2 == 0) or (a3 == 0)
            tmp_result[tmp_count] = int(a)
            tmp_count += 1
        ### Once we have the tmp_result, we should be able to get pearson correlation 
        result[count_final] = tmp_result
        pearson_result = abs(stats.pearsonr(tmp_result, timing_result)[0])
        count_final += 1
        
check_result = [0] * 16384
for i in range(0, 16384):
    check_result[i] = abs(stats.pearsonr(result[i], timing_result)[0])


maximum = max(check_result)
max_index = check_result.index(maximum)
keyvalue = int(max_index/ 256)
if maximum > 0.71:
    print(maximum,  max_index, keyvalue, "**********************")
else:
    print(maximum,  max_index, keyvalue)



rect = patches.Rectangle((max_index, maximum), 40, 30, linewidth=1, edgecolor='r', facecolor='none')


x_axis = np.arange(16384)
x_axis2 = np.arange(keyvalue * 256, (keyvalue+1)*256+1)
plt.figure(figsize=(8,3))
plt.scatter(x_axis, check_result, s = 0.6, color="lightblue")
plt.scatter(x_axis2, check_result[keyvalue * 256 : (keyvalue+1)*256+1], marker="x", s=0.6, color="#FF00FF")

plt.xticks(np.arange(0,16385,256), np.arange(0,65,1), rotation=70, fontsize=7)
plt.xlabel("6 LSBs of the key byte", fontsize=8)
plt.ylabel("Correlation Score", fontsize=8)

ax=plt.gca()
rect = patches.Rectangle((max_index - 250, maximum - 0.025), 500, 0.05, linewidth=0.5, edgecolor='r', facecolor='none')
ax.add_patch(rect)

plt.tight_layout()

plt.savefig("round2-singlebyte.pdf")